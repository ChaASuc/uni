<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uni.grademanagement.mapper.CourseItemDetailMapper">
  <resultMap id="BaseResultMap" type="edu.uni.grademanagement.bean.CourseItemDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="university_id" jdbcType="BIGINT" property="universityId" />
    <result column="course_item_id" jdbcType="BIGINT" property="courseItemId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="by_who" jdbcType="BIGINT" property="byWho" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, university_id, course_item_id, number, content, datetime, by_who, deleted
  </sql>
  <select id="selectByExample" parameterType="edu.uni.grademanagement.bean.CourseItemDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_item_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_item_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByCourseItemDetail" parameterType="edu.uni.grademanagement.bean.CourseItemDetail" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from course_item_detail
    where
    <if test="universityId != null">
      university_id = #{universityId}
    </if>
    <if test="courseItemId != null">
      and course_item_id = #{courseItemId}
    </if>
    <if test="number != null">
      and number = #{number}
    </if>
    <if test="byWho != null">
      and by_who = #{byWho}
    </if>
    <if test="deleted != null">
      and deleted = #{deleted}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course_item_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.grademanagement.bean.CourseItemDetailExample">
    delete from course_item_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.grademanagement.bean.CourseItemDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_item_detail (university_id, course_item_id, number, 
      content, datetime, by_who, 
      deleted)
    values (#{universityId,jdbcType=BIGINT}, #{courseItemId,jdbcType=BIGINT}, #{number,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, #{byWho,jdbcType=BIGINT}, 
      #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.grademanagement.bean.CourseItemDetail">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_item_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="universityId != null">
        university_id,
      </if>
      <if test="courseItemId != null">
        course_item_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="byWho != null">
        by_who,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="universityId != null">
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="courseItemId != null">
        #{courseItemId,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <insert id="insertCourseItemDetailLists">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_item_detail (university_id, course_item_id, number,
    content, datetime, by_who,
    deleted)
    values
    <foreach collection="records" item="item" index="index" separator=",">
      (#{item.universityId}, #{item.courseItemId}, #{item.number},
      #{item.content}, #{item.datetime}, #{item.byWho},
      #{item.deleted})
    </foreach>
  </insert>
  <select id="countByExample" parameterType="edu.uni.grademanagement.bean.CourseItemDetailExample" resultType="java.lang.Long">
    select count(*) from course_item_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_item_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null">
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.courseItemId != null">
        course_item_id = #{record.courseItemId,jdbcType=BIGINT},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.datetime != null">
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null">
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_item_detail
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      course_item_id = #{record.courseItemId,jdbcType=BIGINT},
      number = #{record.number,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateDeletedByPrimaryKey" parameterType="java.lang.Long">
    update course_item_detail
    set
    deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.grademanagement.bean.CourseItemDetail">
    update course_item_detail
    <set>
      <if test="universityId != null">
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="courseItemId != null">
        course_item_id = #{courseItemId,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.grademanagement.bean.CourseItemDetail">
    update course_item_detail
    set university_id = #{universityId,jdbcType=BIGINT},
      course_item_id = #{courseItemId,jdbcType=BIGINT},
      number = #{number,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>