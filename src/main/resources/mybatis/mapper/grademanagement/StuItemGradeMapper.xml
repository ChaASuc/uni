<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.uni.grademanagement.mapper.StuItemGradeMapper" >
  <resultMap id="BaseResultMap" type="edu.uni.grademanagement.bean.StuItemGrade" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="university_id" property="universityId" jdbcType="BIGINT" />
    <result column="stu_grade_main_id" property="stuGradeMainId" jdbcType="BIGINT" />
    <result column="course_item_id" property="courseItemId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="by_who" property="byWho" jdbcType="BIGINT" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
    <result column="cache" property="cache" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, university_id, stu_grade_main_id, course_item_id, score, note, datetime, by_who, 
    deleted, cache
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.uni.grademanagement.bean.StuItemGradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stu_item_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from stu_item_grade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from stu_item_grade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.grademanagement.bean.StuItemGradeExample" >
    delete from stu_item_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.grademanagement.bean.StuItemGrade" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stu_item_grade (university_id, stu_grade_main_id, course_item_id, 
      score, note, datetime, 
      by_who, deleted, cache
      )
    values (#{universityId,jdbcType=BIGINT}, #{stuGradeMainId,jdbcType=BIGINT}, #{courseItemId,jdbcType=BIGINT}, 
      #{score,jdbcType=DOUBLE}, #{note,jdbcType=VARCHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=TINYINT}, #{cache,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.grademanagement.bean.StuItemGrade" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stu_item_grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="universityId != null" >
        university_id,
      </if>
      <if test="stuGradeMainId != null" >
        stu_grade_main_id,
      </if>
      <if test="courseItemId != null" >
        course_item_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="byWho != null" >
        by_who,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="cache != null" >
        cache,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="universityId != null" >
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="stuGradeMainId != null" >
        #{stuGradeMainId,jdbcType=BIGINT},
      </if>
      <if test="courseItemId != null" >
        #{courseItemId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="cache != null" >
        #{cache,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <insert id="insertStuItemGrades">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stu_item_grade (university_id, stu_grade_main_id, course_item_id,
    score, note, datetime,
    by_who, deleted)
    values
    <foreach collection="records" index="index" item="record" separator="," >
      (
      #{record.universityId},
      #{record.stuGradeMainId},
      #{record.courseItemId},
      #{record.score},
      #{record.note},
      #{record.datetime},
      #{record.byWho},
      #{record.deleted}
      )
    </foreach>
  </insert>

  <select id="countByExample" parameterType="edu.uni.grademanagement.bean.StuItemGradeExample" resultType="java.lang.Integer" >
    select count(*) from stu_item_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stu_item_grade
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null" >
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.stuGradeMainId != null" >
        stu_grade_main_id = #{record.stuGradeMainId,jdbcType=BIGINT},
      </if>
      <if test="record.courseItemId != null" >
        course_item_id = #{record.courseItemId,jdbcType=BIGINT},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null" >
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.cache != null" >
        cache = #{record.cache,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stu_item_grade
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      stu_grade_main_id = #{record.stuGradeMainId,jdbcType=BIGINT},
      course_item_id = #{record.courseItemId,jdbcType=BIGINT},
      score = #{record.score,jdbcType=DOUBLE},
      note = #{record.note,jdbcType=VARCHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=TINYINT},
      cache = #{record.cache,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.grademanagement.bean.StuItemGrade" >
    update stu_item_grade
    <set >
      <if test="universityId != null" >
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="stuGradeMainId != null" >
        stu_grade_main_id = #{stuGradeMainId,jdbcType=BIGINT},
      </if>
      <if test="courseItemId != null" >
        course_item_id = #{courseItemId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null" >
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="cache != null" >
        cache = #{cache,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.grademanagement.bean.StuItemGrade" >
    update stu_item_grade
    set university_id = #{universityId,jdbcType=BIGINT},
      stu_grade_main_id = #{stuGradeMainId,jdbcType=BIGINT},
      course_item_id = #{courseItemId,jdbcType=BIGINT},
      score = #{score,jdbcType=DOUBLE},
      note = #{note,jdbcType=VARCHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=TINYINT},
      cache = #{cache,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>